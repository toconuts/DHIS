security:
    encoders:
        main1:
            class: Symfony\Component\Security\Core\User\User
            algorithm: plaintext
        main2:
            class: DHIS\Bundle\CommonBundle\Entity\User
            algorithm:        sha1
            encode_as_base64: false
            iterations:       1

    role_hierarchy:
        ROLE_ALLPRODUCTS_USER: [ROLE_SCOMDIS_USER, ROLE_PM1_USER, ROLE_EYEBASE_USER]
        ROLE_ADMIN:       [ROLE_USER, ROLE_ALLPRODUCTS_USER, ROLE_SCOMDIS_ADMIN]
        ROLE_SUPER_ADMIN: [ROLE_ADMIN, ROLE_ALLOWED_TO_SWITCH]

    providers:
        chain_provider:
            providers: [in_memory,user_db]
        in_memory:
            users:
                muser:  { password: userpass, roles: [ 'ROLE_USER' ] }
                madmin: { password: adminpass, roles: [ 'ROLE_ADMIN' ] }
        user_db:
            entity: { class: DHIS\Bundle\CommonBundle\Entity\User }

    firewalls:
        dev:
            pattern:  ^/(_(profiler|wdt)|css|images|js)/
            security: false

        login:
            pattern:  ^/login$
            security: false

        secured_area:
            pattern:    ^/
            form_login:
                check_path: /login_check
                login_path: /login
            logout:
                path:   /logout
                target: /login
            #anonymous: ~
            #http_basic:
            #    realm: "Secured Demo Area"

    access_control:
        - { path: ^/admin, roles: ROLE_ADMIN }
        - { path: ^/scomdis, roles: ROLE_SCOMDIS_USER }
        - { path: ^/pm1, roles: ROLE_PM1_USER }
        - { path: ^/eyebase, roles: ROLE_EYEBASE_USER }
        #- { path: ^/login, roles: IS_AUTHENTICATED_ANONYMOUSLY, requires_channel: https }
        #- { path: ^/_internal, roles: IS_AUTHENTICATED_ANONYMOUSLY, ip: 127.0.0.1 }
